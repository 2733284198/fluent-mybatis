package ${entityUpdate.package};

import cn.org.atool.fluent.mybatis.segment.BaseUpdate;

import ${entity.package}.${entity.name};
import ${mapping.package}.${mapping.name};
import ${wrapperHelper.package}.${wrapperHelper.name}.UpdateSetter;
import ${wrapperHelper.package}.${wrapperHelper.name}.UpdateWhere;
import cn.org.atool.fluent.mybatis.exception.FluentMybatisException;

import static cn.org.atool.fluent.mybatis.utility.MybatisUtil.isNotEmpty;

/**
 * ${entityUpdate.name}: ${entity.name}更新设置
 *
 * @author ${author}
 */
public class ${entityUpdate.name} extends BaseUpdate<${entity.name}, ${entityUpdate.name}, ${entityQuery.name}> {
    /**
     * 更新条件设置
     */
    public final UpdateWhere where = new UpdateWhere(this);
    /**
     * 更新值设置
     */
    public final UpdateSetter set = new UpdateSetter(this);

    public ${entityUpdate.name}(){
        super(${mapping.name}.Table_Name, ${entity.name}.class, ${entityQuery.name}.class);
    }

    @Override
    public UpdateWhere where() {
        return this.where;
    }

    @Override
    protected void validateColumn(String column) throws FluentMybatisException {
        if (isNotEmpty(column) && !${mapping.name}.ALL_COLUMNS.contains(column)) {
            throw new FluentMybatisException("the column[" + column + "] was not found in table[" + ${mapping.name}.Table_Name + "].");
        }
    }
}