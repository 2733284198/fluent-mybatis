package ${entityHelper.package};

import ${entity.package}.${entity.name};
import ${mapping.package}.${mapping.name};

import java.util.HashMap;
import java.util.Map;
$!{importTypes}

/**
 * <p>
 * $!{comment}
 * </p>
 *
 * @author ${author}
 */
public class ${entityHelper.name} {
    /**
     * ${entity.name}对象转换为HashMap，key值是对象属性
     *
     * @param entity
     * @return
     */
    public static Map<String, Object> map(${entity.name} entity){
        Map<String, Object> map = new HashMap<>();
        #foreach($field in ${fields})
        if (entity.get${field.capitalName}() != null) {
            map.put(${mapping.name}.${field.name}.name, entity.get${field.capitalName}());
        }
        #end
        return map;
    }

    /**
     * ${entity.name}对象转换为HashMap，key值是数据库字段
     *
     * @param entity
     * @return
     */
    public static Map<String, Object> columnMap(${entity.name} entity){
        Map<String, Object> map = new HashMap<>();
        #foreach($field in ${fields})
        if (entity.get${field.capitalName}() != null) {
            map.put(${mapping.name}.${field.name}.column, entity.get${field.capitalName}());
        }
        #end
        return map;
    }

    /**
     * map对应属性值设置到${entity.name}对象中
     *
     * @param map
     * @return
     */
    public static ${entity.name} entity(Map<String, Object> map){
        ${entity.name} entity = new ${entity.name}();
        #foreach($field in ${fields})
        if (map.containsKey(${mapping.name}.${field.name}.name)) {
            entity.set${field.capitalName}((${field.type}) map.get(${mapping.name}.${field.name}.name));
        }
        #end
        return entity;
    }

    public static ${entity.name} copy(${entity.name} entity) {
        ${entity.name} copy = new ${entity.name}();
        {
        #foreach($field in ${fields})
            copy.set${field.capitalName}(entity.get${field.capitalName}());
        #end
        }
        return copy;
    }
}