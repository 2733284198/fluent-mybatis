package ${entityUpdate.package};

import cn.org.atool.fluent.mybatis.condition.base.*;

import java.util.*;

import ${entity.package}.${entity.name};
import ${mapping.package}.${mapping.name};
import ${entityHelper.package}.${entityHelper.name};
import ${wrapperHelper.package}.${wrapperHelper.name}.WrapperWhere;
import ${wrapperHelper.package}.${wrapperHelper.name}.UpdateSetter;

/**
 * ${entityUpdate.name}: ${entity.name}更新设置
 *
 * @author ${author}
 */
public class ${entityUpdate.name} extends BaseUpdate<${entity.name}, ${entityUpdate.name}, ${entityQuery.name}> {

    public final WrapperWhere<${entityUpdate.name}> and = new WrapperWhere<>(this);

    public final WrapperWhere<${entityUpdate.name}> or = new WrapperWhere<>(this, false);

    public final UpdateSetter set = new UpdateSetter(this);

    public ${entityUpdate.name}(){
        super(${entity.name}.class);
    }

    @Override
    public ${entityUpdate.name} eqByNotNull(${entity.name} entity) {
        super.eqByNotNull(${entityHelper.name}.column(entity));
        return this;
    }

    @Override
    protected Map<String, String> property2Column() {
        return ${mapping.name}.Property2Column;
    }

    @Override
    public Class<${entityQuery.name}> queryClass() {
        return ${entityQuery.name}.class ;
    }
}